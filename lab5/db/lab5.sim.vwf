/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2013 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 40000.0;
	SIMULATION_TIME = 40000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("HEX0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 7;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("HEX0[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "HEX0";
}

SIGNAL("HEX0[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "HEX0";
}

SIGNAL("HEX0[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "HEX0";
}

SIGNAL("HEX0[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "HEX0";
}

SIGNAL("HEX0[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "HEX0";
}

SIGNAL("HEX0[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "HEX0";
}

SIGNAL("HEX0[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "HEX0";
}

SIGNAL("HEX1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 7;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("HEX1[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "HEX1";
}

SIGNAL("HEX1[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "HEX1";
}

SIGNAL("HEX1[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "HEX1";
}

SIGNAL("HEX1[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "HEX1";
}

SIGNAL("HEX1[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "HEX1";
}

SIGNAL("HEX1[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "HEX1";
}

SIGNAL("HEX1[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "HEX1";
}

SIGNAL("HEX2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 7;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("HEX2[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "HEX2";
}

SIGNAL("HEX2[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "HEX2";
}

SIGNAL("HEX2[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "HEX2";
}

SIGNAL("HEX2[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "HEX2";
}

SIGNAL("HEX2[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "HEX2";
}

SIGNAL("HEX2[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "HEX2";
}

SIGNAL("HEX2[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "HEX2";
}

SIGNAL("HEX3")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 7;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("HEX3[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "HEX3";
}

SIGNAL("HEX3[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "HEX3";
}

SIGNAL("HEX3[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "HEX3";
}

SIGNAL("HEX3[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "HEX3";
}

SIGNAL("HEX3[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "HEX3";
}

SIGNAL("HEX3[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "HEX3";
}

SIGNAL("HEX3[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "HEX3";
}

SIGNAL("KEY")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 2;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("KEY[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "KEY";
}

SIGNAL("KEY[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "KEY";
}

SIGNAL("CLOCK_50")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("device_runnig")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

TRANSITION_LIST("HEX0[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 963.9;
		NODE
		{
			REPEAT = 1727;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 4.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 1604.0;
		NODE
		{
			REPEAT = 143;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 4.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 0.1;
	}
}

TRANSITION_LIST("HEX0[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 961.9;
		NODE
		{
			REPEAT = 1727;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 6.0;
		}
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 1606.0;
		NODE
		{
			REPEAT = 143;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 6.0;
		}
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.1;
	}
}

TRANSITION_LIST("HEX0[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 961.9;
		LEVEL 1 FOR 2.0;
		NODE
		{
			REPEAT = 1726;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 6.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 2.0;
				LEVEL 1 FOR 2.0;
			}
		}
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 6.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
		}
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 6.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
		}
		LEVEL 0 FOR 1602.0;
		LEVEL 1 FOR 2.0;
		NODE
		{
			REPEAT = 142;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 6.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 2.0;
				LEVEL 1 FOR 2.0;
			}
		}
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 6.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
		}
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 6.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
		}
		LEVEL 0 FOR 0.1;
	}
}

TRANSITION_LIST("HEX0[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 961.9;
		NODE
		{
			REPEAT = 1726;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 2.0;
				LEVEL 0 FOR 4.0;
			}
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 6.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 4.0;
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 4.0;
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 1606.0;
		NODE
		{
			REPEAT = 142;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 2.0;
				LEVEL 0 FOR 4.0;
			}
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 6.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 4.0;
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 4.0;
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.1;
	}
}

TRANSITION_LIST("HEX0[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 963.9;
		NODE
		{
			REPEAT = 1727;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 18.0;
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 1618.0;
		NODE
		{
			REPEAT = 143;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 18.0;
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 14.1;
	}
}

TRANSITION_LIST("HEX0[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 969.9;
		NODE
		{
			REPEAT = 1727;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 16.0;
		}
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 1616.0;
		NODE
		{
			REPEAT = 143;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 16.0;
		}
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 6.1;
	}
}

TRANSITION_LIST("HEX0[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 961.9;
		NODE
		{
			REPEAT = 1727;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 12.0;
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 1612.0;
		NODE
		{
			REPEAT = 143;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 12.0;
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 10.1;
	}
}

TRANSITION_LIST("HEX1[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1359.9;
		NODE
		{
			REPEAT = 17;
			LEVEL 0 FOR 1000.0;
			LEVEL 1 FOR 200.0;
			LEVEL 0 FOR 400.0;
			LEVEL 1 FOR 400.0;
		}
		LEVEL 0 FOR 160.2;
		LEVEL 1 FOR 1999.8;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 480.1;
	}
}

TRANSITION_LIST("HEX1[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1159.9;
		NODE
		{
			REPEAT = 17;
			LEVEL 1 FOR 600.0;
			LEVEL 0 FOR 600.0;
			LEVEL 1 FOR 200.0;
			LEVEL 0 FOR 600.0;
		}
		LEVEL 1 FOR 360.2;
		LEVEL 0 FOR 1799.8;
		LEVEL 1 FOR 600.0;
		LEVEL 0 FOR 600.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 600.0;
		LEVEL 1 FOR 600.0;
		LEVEL 0 FOR 80.1;
	}
}

TRANSITION_LIST("HEX1[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1159.9;
		LEVEL 1 FOR 200.0;
		NODE
		{
			REPEAT = 16;
			LEVEL 0 FOR 200.0;
			LEVEL 1 FOR 600.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 200.0;
				LEVEL 1 FOR 200.0;
			}
		}
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 600.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 200.0;
			LEVEL 1 FOR 200.0;
		}
		LEVEL 0 FOR 1960.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 600.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 200.0;
			LEVEL 1 FOR 200.0;
		}
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 280.1;
	}
}

TRANSITION_LIST("HEX1[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1159.9;
		NODE
		{
			REPEAT = 16;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 200.0;
				LEVEL 0 FOR 400.0;
			}
			LEVEL 1 FOR 200.0;
			LEVEL 0 FOR 600.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 200.0;
			LEVEL 0 FOR 400.0;
		}
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 600.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 1960.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 200.0;
			LEVEL 0 FOR 400.0;
		}
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 600.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 80.1;
	}
}

TRANSITION_LIST("HEX1[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1359.9;
		NODE
		{
			REPEAT = 17;
			LEVEL 1 FOR 200.0;
			LEVEL 0 FOR 1800.0;
		}
		LEVEL 1 FOR 160.2;
		LEVEL 0 FOR 1999.8;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 1800.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 280.1;
	}
}

TRANSITION_LIST("HEX1[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1959.9;
		NODE
		{
			REPEAT = 16;
			LEVEL 1 FOR 400.0;
			LEVEL 0 FOR 1600.0;
		}
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 3760.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 1480.1;
	}
}

TRANSITION_LIST("HEX1[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1159.9;
		NODE
		{
			REPEAT = 17;
			LEVEL 1 FOR 200.0;
			LEVEL 0 FOR 400.0;
			LEVEL 1 FOR 200.0;
			LEVEL 0 FOR 1200.0;
		}
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 1960.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 80.1;
	}
}

TRANSITION_LIST("HEX2[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 4959.9;
		LEVEL 0 FOR 10000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 4000.0;
		LEVEL 1 FOR 4000.0;
		LEVEL 0 FOR 10000.0;
		LEVEL 1 FOR 5040.1;
	}
}

TRANSITION_LIST("HEX2[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2959.9;
		LEVEL 1 FOR 6000.0;
		LEVEL 0 FOR 6000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 6000.0;
		LEVEL 1 FOR 6000.0;
		LEVEL 0 FOR 6000.0;
		LEVEL 1 FOR 560.2;
		LEVEL 0 FOR 3599.8;
		LEVEL 1 FOR 880.1;
	}
}

TRANSITION_LIST("HEX2[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2959.9;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 6000.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 2000.0;
			LEVEL 1 FOR 2000.0;
		}
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 6000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 560.2;
		LEVEL 0 FOR 3599.8;
		LEVEL 1 FOR 880.1;
	}
}

TRANSITION_LIST("HEX2[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2959.9;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 2000.0;
			LEVEL 0 FOR 4000.0;
		}
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 6000.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 2000.0;
			LEVEL 0 FOR 4000.0;
		}
		LEVEL 1 FOR 560.2;
		LEVEL 0 FOR 3599.8;
		LEVEL 1 FOR 880.1;
	}
}

TRANSITION_LIST("HEX2[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 4959.9;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 18000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 13040.1;
	}
}

TRANSITION_LIST("HEX2[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10959.9;
		LEVEL 1 FOR 4000.0;
		LEVEL 0 FOR 16000.0;
		LEVEL 1 FOR 4000.0;
		LEVEL 0 FOR 5040.1;
	}
}

TRANSITION_LIST("HEX2[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2959.9;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 4000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 12000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 4000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 8160.0;
		LEVEL 1 FOR 880.1;
	}
}

TRANSITION_LIST("HEX3[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 40000.0;
	}
}

TRANSITION_LIST("HEX3[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 20959.9;
		LEVEL 1 FOR 14560.2;
		LEVEL 0 FOR 4479.9;
	}
}

TRANSITION_LIST("HEX3[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 20959.9;
		LEVEL 1 FOR 14560.2;
		LEVEL 0 FOR 4479.9;
	}
}

TRANSITION_LIST("HEX3[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 20959.9;
		LEVEL 1 FOR 14560.2;
		LEVEL 0 FOR 4479.9;
	}
}

TRANSITION_LIST("HEX3[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 40000.0;
	}
}

TRANSITION_LIST("HEX3[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 40000.0;
	}
}

TRANSITION_LIST("HEX3[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 20959.9;
		LEVEL 1 FOR 14560.2;
		LEVEL 0 FOR 4479.9;
	}
}

TRANSITION_LIST("KEY[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 35520.0;
		LEVEL 0 FOR 1600.0;
		LEVEL 1 FOR 2880.0;
	}
}

TRANSITION_LIST("KEY[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 38080.0;
	}
}

TRANSITION_LIST("CLOCK_50")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 200000;
			LEVEL 0 FOR 0.1;
			LEVEL 1 FOR 0.1;
		}
	}
}

TRANSITION_LIST("device_runnig")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 39040.0;
	}
}

DISPLAY_LINE
{
	CHANNEL = "CLOCK_50";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "HEX0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
	CHILDREN = 2, 3, 4, 5, 6, 7, 8;
}

DISPLAY_LINE
{
	CHANNEL = "HEX0[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 2;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "HEX0[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "HEX0[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "HEX0[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "HEX0[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "HEX0[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "HEX0[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "HEX1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 9;
	TREE_LEVEL = 0;
	CHILDREN = 10, 11, 12, 13, 14, 15, 16;
}

DISPLAY_LINE
{
	CHANNEL = "HEX1[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "HEX1[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "HEX1[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "HEX1[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "HEX1[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "HEX1[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "HEX1[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "HEX2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 17;
	TREE_LEVEL = 0;
	CHILDREN = 18, 19, 20, 21, 22, 23, 24;
}

DISPLAY_LINE
{
	CHANNEL = "HEX2[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 17;
}

DISPLAY_LINE
{
	CHANNEL = "HEX2[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 17;
}

DISPLAY_LINE
{
	CHANNEL = "HEX2[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 17;
}

DISPLAY_LINE
{
	CHANNEL = "HEX2[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 17;
}

DISPLAY_LINE
{
	CHANNEL = "HEX2[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 17;
}

DISPLAY_LINE
{
	CHANNEL = "HEX2[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 17;
}

DISPLAY_LINE
{
	CHANNEL = "HEX2[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 24;
	TREE_LEVEL = 1;
	PARENT = 17;
}

DISPLAY_LINE
{
	CHANNEL = "HEX3";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 25;
	TREE_LEVEL = 0;
	CHILDREN = 26, 27, 28, 29, 30, 31, 32;
}

DISPLAY_LINE
{
	CHANNEL = "HEX3[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 25;
}

DISPLAY_LINE
{
	CHANNEL = "HEX3[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 27;
	TREE_LEVEL = 1;
	PARENT = 25;
}

DISPLAY_LINE
{
	CHANNEL = "HEX3[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 28;
	TREE_LEVEL = 1;
	PARENT = 25;
}

DISPLAY_LINE
{
	CHANNEL = "HEX3[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 29;
	TREE_LEVEL = 1;
	PARENT = 25;
}

DISPLAY_LINE
{
	CHANNEL = "HEX3[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 30;
	TREE_LEVEL = 1;
	PARENT = 25;
}

DISPLAY_LINE
{
	CHANNEL = "HEX3[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 31;
	TREE_LEVEL = 1;
	PARENT = 25;
}

DISPLAY_LINE
{
	CHANNEL = "HEX3[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 32;
	TREE_LEVEL = 1;
	PARENT = 25;
}

DISPLAY_LINE
{
	CHANNEL = "KEY";
	EXPAND_STATUS = EXPANDED;
	RADIX = Binary;
	TREE_INDEX = 33;
	TREE_LEVEL = 0;
	CHILDREN = 34, 35;
}

DISPLAY_LINE
{
	CHANNEL = "KEY[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 34;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "KEY[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 35;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "device_runnig";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 36;
	TREE_LEVEL = 0;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}
;
